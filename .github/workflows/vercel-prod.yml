name: Vercel Prod

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: vercel-prod
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # moraš da imaš ova 3 secreta u repo Settings → Secrets → Actions
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}        # npr. team_xxxxx
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }} # prj_zs9kf5e2NRdyDvFwI1LVhkRg0oBr
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node & Vercel CLI
        run: |
          node -v
          npm -v
          npm i -g vercel@latest
          vercel --version

      - name: Sanity check & auth
        run: |
          test -n "$VERCEL_TOKEN" || (echo "❌ VERCEL_TOKEN is empty" && exit 1)
          test -n "$VERCEL_ORG_ID" || (echo "❌ VERCEL_ORG_ID is empty" && exit 1)
          test -n "$VERCEL_PROJECT_ID" || (echo "❌ VERCEL_PROJECT_ID is empty" && exit 1)
          # Provera tokena i scopa (team-a)
          vercel whoami --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"

      - name: Write .vercel/project.json
        run: |
          mkdir -p .vercel
          echo "{\"orgId\":\"$VERCEL_ORG_ID\",\"projectId\":\"$VERCEL_PROJECT_ID\"}" > .vercel/project.json
          cat .vercel/project.json

      - name: vercel pull (production)
        run: vercel pull --yes --environment=production --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"

      - name: vercel build --prod
        run: vercel build --prod --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"

      - name: vercel deploy --prebuilt --prod
        run: vercel deploy --prebuilt --prod --yes --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"
