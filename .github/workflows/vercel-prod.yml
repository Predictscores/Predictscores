name: Vercel Prod (debug)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: vercel-prod
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}          # team_XXXX (ID)
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}  # prj_XXXX
      VERCEL_TEAM_SLUG: ${{ secrets.VERCEL_TEAM_SLUG }}    # npr. predictscores
      VERCEL_LOG_LEVEL: debug
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Echo inputs
        run: |
          echo "ORG_ID=$VERCEL_ORG_ID"
          echo "PROJ_ID=$VERCEL_PROJECT_ID"
          echo "TEAM_SLUG=$VERCEL_TEAM_SLUG"

      - name: whoami (scope must be SLUG)
        run: vercel whoami --token "$VERCEL_TOKEN" --scope "$VERCEL_TEAM_SLUG"

      - name: Write .vercel/project.json (needs ORG ID + PROJECT ID)
        run: |
          mkdir -p .vercel
          printf '{"orgId":"%s","projectId":"%s"}' "$VERCEL_ORG_ID" "$VERCEL_PROJECT_ID" > .vercel/project.json
          cat .vercel/project.json

      - name: List projects (sanity)
        run: vercel projects ls --token "$VERCEL_TOKEN" --scope "$VERCEL_TEAM_SLUG"

      - name: Pull env (production)
        run: vercel pull --yes --environment=production --token "$VERCEL_TOKEN" --scope "$VERCEL_TEAM_SLUG"

      - name: Build (prod)
        run: vercel build --prod --token "$VERCEL_TOKEN" --scope "$VERCEL_TEAM_SLUG"

      - name: Deploy (prebuilt prod)
        run: vercel deploy --prebuilt --prod --yes --token "$VERCEL_TOKEN" --scope "$VERCEL_TEAM_SLUG"
